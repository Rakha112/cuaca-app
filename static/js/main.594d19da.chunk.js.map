{"version":3,"sources":["data/Weather.js","components/InfoCuaca.js","3d weather icons/sun/27.png","3d weather icons/sun/26.png","3d weather icons/cloud/7.png","3d weather icons/cloud/17.png","3d weather icons/cloud/23.png","3d weather icons/sun/4.png","data/dataGambar.js","components/Card.js","components/Chart.js","App.js","index.js"],"names":["API_KEY","URL","getForecast","lat","lon","axios","get","InfoCuaca","props","className","suhu","cuaca","humi","angin","terbit","terbenam","gambar","img","clear","haze","cloud","snow","rain","thunder","mist","getImgSrc","infoCuaca","find","w","Card","moment","unix","dt","locale","format","src","weather","main","alt","loading","temp","day","Chart","console","log","labels","data","datasets","fill","backgroundColor","borderColor","lineTension","options","responsive","maintainAspectRatio","scaleShowLabels","animation","legend","display","scales","x","grid","color","y","plugins","title","text","font","size","App","useState","lokasi","setLokasi","lokDis","setLokDis","daily","dailySuhu","info","setInfo","onSubmit","e","preventDefault","getData","a","kota","then","res","catch","err","coord","data2","humidity","wind","speed","sys","sunrise","sunset","slice","map","d","dSuhu","action","IconButton","type","onClick","placeholder","value","onChange","target","hari","getDay","tanggal","getDate","bulan","getMonth","tahun","getFullYear","buatTanggal","Date","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.594d19da.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_KEY = \"ea6a3ea8ea54930d997f4fdf132e82ff\";\r\nconst URL = \"https://api.openweathermap.org/data/2.5\";\r\n\r\nexport const getWeather = (kota) => {\r\n  return axios\r\n    .get(URL + `/weather?q=${kota},ID&appid=${API_KEY}&units=metric`)\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getForecast = (lat, lon) => {\r\n  return axios.get(\r\n    URL +\r\n      `/onecall?lat=${lat}&lon=${lon}&exclude=minutely,hourly,alerts&appid=${API_KEY}&units=metric`\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst InfoCuaca = ({ props }) => {\r\n  return (\r\n    <div className=\"info__cuaca\">\r\n      <h2>SUHU</h2>\r\n      <p>{props.suhu ? props.suhu : \"-\"}&deg;C</p>\r\n      <p className=\"nama__cuaca\">{props.cuaca ? props.cuaca : \"-\"}</p>\r\n      <div className=\"info__lain\">\r\n        <div className=\"info__lainlain\">\r\n          <h2>Humidity</h2>\r\n          <p>{props.humi ? props.humi : \"-\"}%</p>\r\n        </div>\r\n        <div className=\"info__lainlain\">\r\n          <h2>Kecepatan Angin</h2>\r\n          <p>{props.angin ? props.angin : \"-\"}m/s</p>\r\n        </div>\r\n        <div className=\"info__lainlain\">\r\n          <h2>Terbit</h2>\r\n          <p>{props.terbit ? props.terbit : \"-\"}</p>\r\n        </div>\r\n        <div className=\"info__lainlain\">\r\n          <h2>Terbenam</h2>\r\n          <p>{props.terbenam ? props.terbenam : \"-\"}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCuaca;\r\n","export default __webpack_public_path__ + \"static/media/27.472f0cc9.png\";","export default __webpack_public_path__ + \"static/media/26.6290a6d2.png\";","export default __webpack_public_path__ + \"static/media/7.3ff35a46.png\";","export default __webpack_public_path__ + \"static/media/17.1b288064.png\";","export default __webpack_public_path__ + \"static/media/23.277a9dbc.png\";","export default __webpack_public_path__ + \"static/media/4.ba1cb76e.png\";","import cloud from \"../3d weather icons/sun/27.png\";\r\nimport clear from \"../3d weather icons/sun/26.png\";\r\nimport rain from \"../3d weather icons/cloud/7.png\";\r\nimport thunder from \"../3d weather icons/cloud/17.png\";\r\nimport snow from \"../3d weather icons/cloud/23.png\";\r\nimport mist from \"../3d weather icons/sun/4.png\";\r\nimport haze from \"../3d weather icons/sun/4.png\";\r\n\r\nconst gambar = [\r\n  {\r\n    cuaca: \"-\",\r\n    img: clear,\r\n  },\r\n  {\r\n    cuaca: \"Haze\",\r\n    img: haze,\r\n  },\r\n  {\r\n    cuaca: \"Clear\",\r\n    img: clear,\r\n  },\r\n  {\r\n    cuaca: \"Clouds\",\r\n    img: cloud,\r\n  },\r\n  {\r\n    cuaca: \"Snow\",\r\n    img: snow,\r\n  },\r\n  {\r\n    cuaca: \"Rain\",\r\n    img: rain,\r\n  },\r\n  {\r\n    cuaca: \"Thunderstorm\",\r\n    img: thunder,\r\n  },\r\n  {\r\n    cuaca: \"Drizzle\",\r\n    img: rain,\r\n  },\r\n  {\r\n    cuaca: \"Mist\",\r\n    img: mist,\r\n  },\r\n];\r\n\r\nexport const getImgSrc = (infoCuaca) => {\r\n  return gambar.find((w) => w.cuaca === infoCuaca).img;\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment/min/moment-with-locales\";\r\nimport { getImgSrc } from \"../data/dataGambar\";\r\n\r\nconst Card = ({ props }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <p>{moment.unix(props.dt).locale(\"id\").format(\"LL\")}</p>\r\n      <img src={getImgSrc(props.weather[0].main)} alt=\"\" loading=\"lazy\" />\r\n      <h2>SUHU</h2>\r\n      <p>{props.temp.day}&deg;C</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst Chart = (props) => {\r\n  console.log(props.labels);\r\n  console.log(props.suhu);\r\n  const data = {\r\n    labels: props.labels,\r\n    datasets: [\r\n      {\r\n        data: props.suhu,\r\n        fill: true,\r\n        backgroundColor: \"rgba(150, 191, 206, 0.8)\",\r\n        borderColor: \"#96bfce\",\r\n        lineTension: 0.3,\r\n      },\r\n    ],\r\n  };\r\n  const option = {\r\n    responsive: true,\r\n    maintainAspectRatio: true,\r\n    scaleShowLabels: false,\r\n    animation: true,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          color: \"transparent\",\r\n        },\r\n      },\r\n      y: {\r\n        display: false,\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"INFO CUACA\",\r\n        color: \"#9DC8D7\",\r\n        font: {\r\n          size: 20,\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      <Line data={data} options={option} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState } from \"react\";\nimport moment from \"moment/min/moment-with-locales\";\nimport { IconButton } from \"@material-ui/core\";\nimport LocationSearchingRoundedIcon from \"@material-ui/icons/LocationSearchingRounded\";\nimport { getWeather, getForecast } from \"./data/Weather\";\nimport InfoCuaca from \"./components/InfoCuaca\";\nimport { getImgSrc } from \"./data/dataGambar\";\nimport Card from \"./components/Card\";\nimport Chart from \"./components/Chart\";\n\nfunction App() {\n  const buatTanggal = (d) => {\n    let months = [\n      \"Januari\",\n      \"Februari\",\n      \"Maret\",\n      \"April\",\n      \"Mei\",\n      \"Juni\",\n      \"Juli\",\n      \"Agustus\",\n      \"September\",\n      \"Oktober\",\n      \"November\",\n      \"Desember\",\n    ];\n    let myDays = [\n      \"Minggu\",\n      \"Senin\",\n      \"Selasa\",\n      \"Rabu\",\n      \"Kamis\",\n      \"Jumat\",\n      \"Sabtu\",\n    ];\n    let hari = myDays[d.getDay()];\n    let tanggal = d.getDate();\n    let bulan = months[d.getMonth()];\n    let tahun = d.getFullYear();\n\n    return `${hari} ${tanggal} ${bulan} ${tahun}`;\n  };\n\n  const [lokasi, setLokasi] = useState(\"\");\n  const [lokDis, setLokDis] = useState(\"\");\n  const [info, setInfo] = useState({\n    suhu: \"\",\n    humi: \"\",\n    angin: \"\",\n    terbit: \"\",\n    terbenam: \"\",\n    cuaca: \"-\",\n    daily: \"\",\n    labels: \"\",\n    dailySuhu: \"\",\n  });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!lokasi || lokasi === \"\") return;\n    getData();\n    setLokDis(lokasi);\n  };\n\n  const getData = async () => {\n    try {\n      const data = await getWeather(lokasi);\n      let lat = data.coord.lat;\n      let lon = data.coord.lon;\n      const data2 = await getForecast(lat, lon);\n      setInfo({\n        suhu: data.main.temp,\n        humi: data.main.humidity,\n        angin: data.wind.speed,\n        terbit: moment.unix(data.sys.sunrise).format(\"h:mm A\"),\n        terbenam: moment.unix(data.sys.sunset).format(\"h:mm A\"),\n        cuaca: data.weather[0].main,\n        daily: data2.data.daily.slice(1, 5),\n        labels: data2.data.daily.map((d) => {\n          return moment.unix(d.dt).locale(\"id\").format(\"Do MMMM\");\n        }),\n        dailySuhu: data2.data.daily.map((dSuhu) => {\n          return dSuhu.temp.day;\n        }),\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"wrap\">\n        <div className=\"wrap_kiri\">\n          <div className=\"cari\">\n            <form action=\"\" onSubmit={onSubmit}>\n              <IconButton type=\"submit\" onClick={onSubmit}>\n                <LocationSearchingRoundedIcon />\n              </IconButton>\n              <input\n                type=\"text\"\n                placeholder=\"Cari Kota...\"\n                value={lokasi}\n                onChange={(e) => setLokasi(e.target.value)}\n              />\n            </form>\n          </div>\n          <h1>{lokDis ? lokDis : \"-\"}</h1>\n          <p>{buatTanggal(new Date())}</p>\n          <div className=\"cuaca\">\n            <div className=\"gambar__cuaca\">\n              <img src={getImgSrc(info.cuaca)} alt=\"\" loading=\"lazy\" />\n            </div>\n            <InfoCuaca props={info} />\n          </div>\n        </div>\n        <div className=\"wrap_kanan\">\n          <div className=\"chart\">\n            <Chart labels={info.labels} suhu={info.dailySuhu} />\n          </div>\n          <div className=\"cuaca__lainHari\">\n            {info.daily\n              ? info.daily.map((d, index) => {\n                  return <Card key={index} props={d} />;\n                })\n              : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}