{"version":3,"sources":["data/Weather.js","components/InfoCuaca.js","3d weather icons/sun/27.png","3d weather icons/sun/26.png","3d weather icons/cloud/7.png","3d weather icons/cloud/17.png","3d weather icons/cloud/23.png","3d weather icons/sun/4.png","data/dataGambar.js","components/Card.js","components/Chart.js","App.js","index.js"],"names":["API_KEY","URL","getForecast","lat","lon","axios","get","InfoCuaca","props","className","suhu","cuaca","humi","angin","terbit","terbenam","gambar","img","clear","haze","cloud","snow","rain","thunder","mist","getImgSrc","infoCuaca","find","w","Card","moment","unix","dt","locale","format","src","weather","main","alt","temp","day","Chart","console","log","labels","data","datasets","fill","backgroundColor","borderColor","lineTension","options","responsive","maintainAspectRatio","scaleShowLabels","animation","legend","display","scales","x","grid","color","y","plugins","title","text","font","size","App","useState","lokasi","setLokasi","lokDis","setLokDis","daily","dailySuhu","info","setInfo","onSubmit","e","preventDefault","getData","a","kota","then","res","catch","err","coord","data2","humidity","wind","speed","sys","sunrise","sunset","slice","map","d","dSuhu","action","IconButton","type","onClick","placeholder","value","onChange","target","hari","getDay","tanggal","getDate","bulan","getMonth","tahun","getFullYear","buatTanggal","Date","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d0467cf.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst API_KEY = 'ea6a3ea8ea54930d997f4fdf132e82ff';\r\nconst URL = 'https://api.openweathermap.org/data/2.5';\r\n\r\nexport const getWeather = (kota) => {\r\n    return axios.get(URL + `/weather?q=${kota},ID&appid=${API_KEY}&units=metric`).then(res => res.data).catch(err => console.log(err))\r\n}\r\n\r\nexport const getForecast = (lat, lon) => {\r\n    return axios.get(URL + `/onecall?lat=${lat}&lon=${lon}&exclude=minutely,hourly,alerts&appid=${API_KEY}&units=metric`)\r\n  \r\n  };","import React from 'react'\r\n\r\n\r\nconst InfoCuaca = ({props}) => {\r\n    return (\r\n        <div className=\"info__cuaca\">\r\n              <h2>SUHU</h2>\r\n              <p>{props.suhu ? props.suhu : '-'}&deg;C</p>\r\n              <p className=\"nama__cuaca\">{props.cuaca ? props.cuaca : '-'}</p>\r\n              <div className=\"info__lain\">\r\n                <div className=\"info__lainlain\">\r\n                  <h2>Humidity</h2>\r\n                  <p>{props.humi ? props.humi : '-'}%</p>\r\n                </div>\r\n                <div className=\"info__lainlain\">\r\n                  <h2>Kecepatan Angin</h2>\r\n                  <p>{props.angin ? props.angin : '-'}m/s</p>\r\n                </div>\r\n                <div className=\"info__lainlain\">\r\n                  <h2>Terbit</h2>\r\n                  <p>{props.terbit ? props.terbit : '-'}</p>\r\n                </div>\r\n                <div className=\"info__lainlain\">\r\n                  <h2>Terbenam</h2>\r\n                  <p>{props.terbenam ? props.terbenam : '-'}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default InfoCuaca\r\n","export default __webpack_public_path__ + \"static/media/27.94bb0050.png\";","export default __webpack_public_path__ + \"static/media/26.9668469a.png\";","export default __webpack_public_path__ + \"static/media/7.95dbad4e.png\";","export default __webpack_public_path__ + \"static/media/17.a366977d.png\";","export default __webpack_public_path__ + \"static/media/23.9183a0c4.png\";","export default __webpack_public_path__ + \"static/media/4.7483085d.png\";","import cloud from '../3d weather icons/sun/27.png'\r\nimport clear from '../3d weather icons/sun/26.png'\r\nimport rain from '../3d weather icons/cloud/7.png'\r\nimport thunder from '../3d weather icons/cloud/17.png'\r\nimport snow from '../3d weather icons/cloud/23.png'\r\nimport mist from '../3d weather icons/sun/4.png'\r\nimport haze from '../3d weather icons/sun/4.png'\r\n\r\nconst gambar = [\r\n    {\r\n        cuaca: \"-\",\r\n        img: clear\r\n    },\r\n    {\r\n        cuaca: \"Haze\",\r\n        img: haze\r\n    },\r\n    {\r\n        cuaca: \"Clear\",\r\n        img: clear\r\n    },\r\n    {\r\n        cuaca: \"Clouds\",\r\n        img: cloud\r\n    },\r\n    {\r\n        cuaca: \"Snow\",\r\n        img: snow\r\n    },\r\n    {\r\n        cuaca: \"Rain\",\r\n        img: rain\r\n    },\r\n    {\r\n        cuaca: \"Thunderstorm\",\r\n        img: thunder\r\n    },\r\n    {\r\n        cuaca: \"Drizzle\",\r\n        img: rain\r\n    },\r\n    {\r\n        cuaca: \"Mist\",\r\n        img: mist\r\n    },\r\n]\r\n\r\nexport const getImgSrc = (infoCuaca) => {\r\n    return gambar.find(w => w.cuaca === infoCuaca).img\r\n    \r\n}\r\n\r\n","import React from 'react'\r\nimport moment from 'moment/min/moment-with-locales';\r\nimport { getImgSrc } from '../data/dataGambar'\r\n\r\nconst Card = ({props}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <p>{ moment.unix(props.dt).locale('id').format('LL')}</p>\r\n            <img src={getImgSrc(props.weather[0].main)} alt=\"\" />\r\n            <h2>SUHU</h2>\r\n            <p>{props.temp.day}&deg;C</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\n\r\nconst Chart = (props) => {\r\n    console.log(props.labels)\r\n    console.log(props.suhu)\r\n    const data = {\r\n        labels: props.labels,\r\n        datasets: [\r\n            {\r\n            data: props.suhu,\r\n            fill: true,\r\n            backgroundColor: \"rgba(150, 191, 206, 0.8)\",\r\n            borderColor: \"#96bfce\",\r\n            lineTension: 0.3,\r\n            }\r\n        ],\r\n    }\r\n    const option = {\r\n        responsive: true,\r\n        maintainAspectRatio: true,\r\n        scaleShowLabels: false,\r\n        animation: true,\r\n        legend: {\r\n            display: false,\r\n        },\r\n        scales: {\r\n            x: {\r\n              grid: {\r\n                color: \"transparent\"\r\n              },\r\n            },\r\n            y: {\r\n              display: false,\r\n            },\r\n          },\r\n          plugins: {\r\n            legend: {\r\n              display: false,\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: \"INFO CUACA\",\r\n                color: \"#9DC8D7\",\r\n                font: {\r\n                  size: 20,\r\n                },\r\n              },\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Line data={data} options={option}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React, {useState} from 'react'\nimport moment from 'moment/min/moment-with-locales';\nimport { IconButton } from '@material-ui/core'\nimport LocationSearchingRoundedIcon from '@material-ui/icons/LocationSearchingRounded'\nimport { getWeather, getForecast } from './data/Weather'\nimport InfoCuaca from './components/InfoCuaca'\nimport { getImgSrc } from './data/dataGambar'\nimport Card from './components/Card'\nimport Chart from './components/Chart'\n\nfunction App() {\n  const buatTanggal = (d) => {\n    let months = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember']\n    let myDays = ['Minggu', 'Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat', 'Sabtu']\n    let hari = myDays[d.getDay()]\n    let tanggal = d.getDate()\n    let bulan = months[d.getMonth()]\n    let tahun = d.getFullYear()\n\n    return `${hari} ${tanggal} ${bulan} ${tahun}`\n  }\n\n  const [lokasi, setLokasi] = useState('')\n  const [lokDis, setLokDis] = useState('')\n  const [info , setInfo] = useState({\n    suhu: \"\",\n    humi:\"\",\n    angin:\"\",\n    terbit:\"\",\n    terbenam: \"\",\n    cuaca: \"-\",\n    daily:\"\",\n    labels: \"\",\n    dailySuhu: \"\"\n  })\n\n  const onSubmit = e => {\n      e.preventDefault()\n      if(!lokasi || lokasi === '') return\n      getData()\n      setLokDis(lokasi)\n  }\n\n  const getData = async () => {\n    try{\n      const data = await getWeather(lokasi)\n      let lat = data.coord.lat\n      let lon = data.coord.lon\n      const data2 = await getForecast(lat,lon)\n      setInfo({\n        suhu: data.main.temp,\n        humi: data.main.humidity,\n        angin: data.wind.speed,\n        terbit: moment.unix(data.sys.sunrise).format(\"h:mm A\"),\n        terbenam: moment.unix(data.sys.sunset).format(\"h:mm A\"),\n        cuaca: data.weather[0].main,\n        daily: data2.data.daily.slice(1, 5),\n        labels: data2.data.daily.map ((d) =>{\n          return moment.unix(d.dt).locale('id').format('Do MMMM')\n        }),\n        dailySuhu: data2.data.daily.map ((dSuhu) => {\n          return dSuhu.temp.day\n        })\n      })\n\n    } catch(err){\n      console.log(err)\n    }\n  }\n\n  \n  return (\n    <div className=\"container\">\n      <div className=\"wrap\">\n        <div className=\"wrap_kiri\">\n          <div className=\"cari\">\n          <form action=\"\" onSubmit={onSubmit}>\n            <IconButton type=\"submit\" onClick={onSubmit}>\n              <LocationSearchingRoundedIcon  />\n            </IconButton>\n              <input type=\"text\" placeholder=\"Cari Kota...\" value={lokasi} onChange={e => setLokasi(e.target.value)}/>\n            </form>\n          </div>\n          <h1>{lokDis ? lokDis : '-'}</h1>\n          <p>{buatTanggal(new Date())}</p>\n          <div className=\"cuaca\">\n            <div className=\"gambar__cuaca\">\n              <img src={getImgSrc(info.cuaca)} alt=\"\" />\n            </div>\n          <InfoCuaca props={info}/>\n          </div>\n        </div>\n        <div className=\"wrap_kanan\">\n          <div className=\"chart\">\n            <Chart labels={info.labels} suhu={info.dailySuhu}/>\n          </div>\n          <div className=\"cuaca__lainHari\">\n            { info.daily ? info.daily.map((d,index) =>{\n              return (\n                <Card key={index} props={d}/>\n                )\n              }) : null\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}